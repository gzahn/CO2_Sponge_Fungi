# repair metadata
sample_names(ps_merged)
# repair metadata
str_split(sample_names(ps_merged),"_")
# repair metadata
map(str_split(sample_names(ps_merged),"_"),1)
# repair metadata
unlist(map(str_split(sample_names(ps_merged),"_"),1))
# repair metadata
ps_merged@sam_data$Sponge_Species <- unlist(map(str_split(sample_names(ps_merged),"_"),1))
unlist(map(str_split(sample_names(ps_merged),"_"),2))
ps_merged@sam_data$Acidified <- unlist(map(str_split(sample_names(ps_merged),"_"),2))
# Basic plots of diversity for overall data
# stacked boxplots x-axis=Acidification, y-axis relative-abundance
ps_merged %>%
transform_sample_counts(function(x){x/sum(x)}) %>%
plot_bar2(fill="Phylum") + scale_fill_manual(values = pal.discrete) + labs(y="Relative abundance",x="Acidification") +
theme(axis.text.x = element_text(angle = 60,hjust=1),
axis.title = element_text(face="bold",size=16),
axis.text = element_text(face="bold",size=12)) +
facet_wrap(~Sponge_Species,scales = "free")
# Basic plots of diversity for overall data
# stacked boxplots x-axis=Acidification, y-axis relative-abundance
ps_merged %>%
transform_sample_counts(function(x){x/sum(x)}) %>%
plot_bar2(fill="Phylum",x="Acidified") + scale_fill_manual(values = pal.discrete) +
labs(y="Relative abundance",x="Acidification") +
theme(axis.text.x = element_text(angle = 60,hjust=1),
axis.title = element_text(face="bold",size=16),
axis.text = element_text(face="bold",size=12),
strip.background = element_blank(),
strip.text = element_text(size=12,face="bold.italic")) +
facet_wrap(~Sponge_Species,scales = "free")
ggsave("./output/figs/Phylum_Diversity_BarChart_by_Acidification.png",dpi=300)
ps_merged %>%
transform_sample_counts(function(x){x/sum(x)}) %>%
plot_bar2(fill="Class",x="Acidified") + scale_fill_manual(values = pal.discrete) +
labs(y="Relative abundance",x="Acidification") +
theme(axis.text.x = element_text(angle = 60,hjust=1),
axis.title = element_text(face="bold",size=16),
axis.text = element_text(face="bold",size=12),
strip.background = element_blank(),
strip.text = element_text(size=12,face="bold.italic")) +
facet_wrap(~Sponge_Species,scales = "free")
ggsave("./output/figs/Class_Diversity_BarChart_by_Acidification.png",dpi=300,width = 10, height = 8)
# Order
ps_merged %>%
transform_sample_counts(function(x){x/sum(x)}) %>%
plot_bar2(fill="Order",x="Acidified") + scale_fill_manual(values = pal.discrete) +
labs(y="Relative abundance",x="Acidification") +
theme(axis.text.x = element_text(angle = 60,hjust=1),
axis.title = element_text(face="bold",size=16),
axis.text = element_text(face="bold",size=12),
strip.background = element_blank(),
strip.text = element_text(size=12,face="bold.italic")) +
facet_wrap(~Sponge_Species,scales = "free")
names(sample_data(ps))
glimpse(sample_data(ps))
# relative abundance
ps_ra <- ps %>% transform_sample_counts(function(x){x/sum(x)})
mod1 <- glm(data = sample_data(ps),
Richness ~ Acidified * Sponge_Species)
mod1 <- glm(data = as(sample_data(ps),"data.frame"),
Richness ~ Acidified * Sponge_Species)
summary(mod1)
# save as dataframe object
meta <- as(sample_data(ps),"data.frame")
mod1 <- glm(data = meta,
Richness ~ Acidified * Sponge_Species)
summary(mod1)
glimpse(meta)
mod2 <- glm(data = meta,
Shannon ~ Acidified * Sponge_Species)
summary(mod2)
# Consider, first, the data without Seawater samples...not sure how to treat those...
meta2 <- meta[meta$Sponge_Species != Seawater,]
# Consider, first, the data without Seawater samples...not sure how to treat those...
meta2 <- meta[meta$Sponge_Species != "Seawater",]
mod1 <- glm(data = meta2,
Richness ~ Acidified * Sponge_Species)
summary(mod1)
mod2 <- glm(data = meta2,
Shannon ~ Acidified * Sponge_Species)
summary(mod2)
glimpse(sam_data(ps))
ps@sam_data$Sampling_Site
ps@sam_data$Acidified
table(ps@sam_data$Sampling_Site,ps@sam_data$Acidified)
table(ps@sam_data$Sampling_Site,ps@sam_data$SSponge_Species)
table(ps@sam_data$Sampling_Site,ps@sam_data$Sponge_Species)
table(ps@sam_data$Acidified,ps@sam_data$Sponge_Species)
# Export crosstab of acidification vs species
sink("./output/Sample_N_for_groups_Acidification_and_SpongeSpecies.txt")
table(ps@sam_data$Acidified,ps@sam_data$Sponge_Species)
sink(NULL)
# merge based on site only
ps_merged <- merge_samples(ps,"Sampling_Site")
ps_merged@sam_data
# Phylum
ps_merged %>%
transform_sample_counts(function(x){x/sum(x)}) %>%
plot_bar2(fill="Phylum",x="Sampling_Site") + scale_fill_manual(values = pal.discrete) +
labs(y="Relative abundance",x="Acidification") +
theme(axis.text.x = element_text(angle = 60,hjust=1),
axis.title = element_text(face="bold",size=16),
axis.text = element_text(face="bold",size=12),
strip.background = element_blank(),
strip.text = element_text(size=12,face="bold.italic"))
ps_merged
# Phylum
ps_merged %>%
transform_sample_counts(function(x){x/sum(x)}) %>%
plot_bar2(fill="Phylum") + scale_fill_manual(values = pal.discrete) +
labs(y="Relative abundance",x="Acidification") +
theme(axis.text.x = element_text(angle = 60,hjust=1),
axis.title = element_text(face="bold",size=16),
axis.text = element_text(face="bold",size=12),
strip.background = element_blank(),
strip.text = element_text(size=12,face="bold.italic"))
# Phylum
ps_merged %>%
transform_sample_counts(function(x){x/sum(x)}) %>%
plot_bar2(fill="Phylum") + scale_fill_manual(values = pal.discrete) +
labs(y="Relative abundance",x="Site") +
theme(axis.text.x = element_text(angle = 60,hjust=1),
axis.title = element_text(face="bold",size=16),
axis.text = element_text(face="bold",size=12),
strip.background = element_blank(),
strip.text = element_text(size=12,face="bold.italic"))
ggsave("./output/figs/Phylum_Diversity_BarChart_by_Site.png",dpi=300)
# Class
ps_merged %>%
transform_sample_counts(function(x){x/sum(x)}) %>%
plot_bar2(fill="Class") + scale_fill_manual(values = pal.discrete) +
labs(y="Relative abundance",x="Site") +
theme(axis.text.x = element_text(angle = 60,hjust=1),
axis.title = element_text(face="bold",size=16),
axis.text = element_text(face="bold",size=12),
strip.background = element_blank(),
strip.text = element_text(size=12,face="bold.italic"))
ggsave("./output/figs/Class_Diversity_BarChart_by_Site.png",dpi=300)
# Quick glance at alpha diversity ####
plot_richness(ps,x="Acidified",measures = "Shannon") +
facet_grid(~Sponge_Species) + labs(y="Shannon diversity")
ggsave("./output/figs/Shannon_diversity_dotplot_by_Species_and_Acidification.png",dpi=300)
# packages ####
library(tidyverse); packageVersion("tidyverse")
library(patchwork); packageVersion("patchwork")
# packages ####
library(tidyverse); packageVersion("tidyverse")
library(patchwork); packageVersion("patchwork")
library(phyloseq); packageVersion("phyloseq")
library(corncob); packageVersion("corncob")
library(vegan); packageVersion("vegan")
library(broom); packageVersion("broom")
library(purrr); packageVersion("purrr")
# packages ####
library(tidyverse); packageVersion("tidyverse")
library(patchwork); packageVersion("patchwork")
library(phyloseq); packageVersion("phyloseq")
library(corncob); packageVersion("corncob")
library(vegan); packageVersion("vegan")
library(broom); packageVersion("broom")
library(purrr); packageVersion("purrr")
#functions
source("./bbdml_helper.R")
source("./R/palettes.R")
source("./bbdml_helper.R")
source("./R/palettes.R")
#functions
source("./R/bbdml_helper.R")
source("./R/palettes.R")
# IMPORT DATA ####
ps <- readRDS("./output/clean_phyloseq_object.RDS")
# remove "NA" Phylum taxa
ps <- subset_taxa(ps,!is.na(tax_table(ps)[,2]))
# glom taxa at various levels
ps_order <- tax_glom(ps,"Order")
ps_family <- tax_glom(ps,"Family")
ps_genus <- tax_glom(ps,"Genus")
sample_data(ps)
glimpse(sample_data(ps))
set.seed(123)
da_analysis <- differentialTest(formula = ~ Acidified, #abundance
phi.formula = ~ Acidified, #dispersion
formula_null = ~ 1, #mean
phi.formula_null = ~ 1,
test = "Wald", boot = FALSE,
data = ps_order,
fdr_cutoff = 0.05)
fire_bbdml <- multi_bbdml(da_analysis,
ps_object = ps_family,
mu_predictor = "FireTreatment",
phi_predictor = "FireTreatment",
taxlevels = 2:7)
length(fire_bbdml)
fire_bbdml <- multi_bbdml(da_analysis,
ps_object = ps_family,
mu_predictor = "Acidified",
phi_predictor = "Acidified",
taxlevels = 2:7)
ps_order <- tax_glom(ps,"Order")
ps_family <- tax_glom(ps,"Family")
ps_genus <- tax_glom(ps,"Genus")
set.seed(123)
da_analysis <- differentialTest(formula = ~ Acidified, #abundance
phi.formula = ~ Acidified, #dispersion
formula_null = ~ 1, #mean
phi.formula_null = ~ 1,
test = "Wald", boot = FALSE,
data = ps_order,
fdr_cutoff = 0.05)
fire_bbdml <- multi_bbdml(da_analysis,
ps_object = ps_order,
mu_predictor = "Acidified",
phi_predictor = "Acidified",
taxlevels = 2:7)
da_analysis
summary(da_analysis)
da_analysis
da_analysis$significant_models
length(da_analysis$significant_models)
if(length(da_analysis$significant_models) > 0){
fire_bbdml <- multi_bbdml(da_analysis,
ps_object = ps_order,
mu_predictor = "Acidified",
phi_predictor = "Acidified",
taxlevels = 2:7)
length(fire_bbdml)
plot_multi_bbdml(bbdml_list = fire_bbdml,
color = "FireTreatment",
pointsize = 3)
}
set.seed(123)
da_analysis <- differentialTest(formula = ~ Acidified, #abundance
phi.formula = ~ Acidified, #dispersion
formula_null = ~ 1, #mean
phi.formula_null = ~ 1,
test = "Wald", boot = FALSE,
data = ps_family,
fdr_cutoff = 0.05)
length(da_analysis$significant_models)
da_analysis
da_analysis$significant_models
da_analysis$all_models
plot(da_analysis)
if(length(da_analysis$significant_models) > 0){
fire_bbdml <- multi_bbdml(da_analysis,
ps_object = ps_order,
mu_predictor = "Acidified",
phi_predictor = "Acidified",
taxlevels = 2:7)
length(fire_bbdml)
plot_multi_bbdml(bbdml_list = fire_bbdml,
color = "FireTreatment",
pointsize = 3)
}
da_analysis <- differentialTest(formula = ~ Acidified, #abundance
phi.formula = ~ Acidified, #dispersion
formula_null = ~ 1, #mean
phi.formula_null = ~ 1,
test = "Wald", boot = FALSE,
data = ps_genus,
fdr_cutoff = 0.05)
plot(da_analysis)
if(length(da_analysis$significant_models) > 0){
fire_bbdml <- multi_bbdml(da_analysis,
ps_object = ps_order,
mu_predictor = "Acidified",
phi_predictor = "Acidified",
taxlevels = 2:7)
length(fire_bbdml)
plot_multi_bbdml(bbdml_list = fire_bbdml,
color = "FireTreatment",
pointsize = 3)
}
if(length(da_analysis$significant_models) > 0){
fire_bbdml <- multi_bbdml(da_analysis,
ps_object = ps_order,
mu_predictor = "Acidified",
phi_predictor = "Acidified",
taxlevels = 2:7)
length(fire_bbdml)
plot_multi_bbdml(bbdml_list = fire_bbdml,
color = "Acidified",
pointsize = 3)
}
fire_bbdml
bbdml_plot_1
ggsave("./output/figs/DA_Plot_Genus-Level_Acidification.png")
glimpse(sample_data(ps))
# Order-level ##
set.seed(123)
da_analysis <- differentialTest(formula = ~ Sponge_Species, #abundance
phi.formula = ~ Sponge_Species, #dispersion
formula_null = ~ 1, #mean
phi.formula_null = ~ 1,
test = "Wald", boot = FALSE,
data = ps_order,
fdr_cutoff = 0.05)
if(length(da_analysis$significant_models) > 0){
bbdml_obj <- multi_bbdml(da_analysis,
ps_object = ps_order,
mu_predictor = "Sponge_Species",
phi_predictor = "Sponge_Species",
taxlevels = 2:7)
length(fire_bbdml)
plot_multi_bbdml(bbdml_list = fire_bbdml,
color = "Sponge_Species",
pointsize = 3)
}
glimpse(sample_data(ps))
# Order-level ##
Sponge_Species
length(da_analysis$significant_models)
bbdml_obj <- multi_bbdml(da_analysis,
ps_object = ps_order,
mu_predictor = "Sponge_Species",
phi_predictor = "Sponge_Species",
taxlevels = 2:7)
length(bbdml_obj)
plot_multi_bbdml(bbdml_list = bbdml_obj,
color = "Sponge_Species",
pointsize = 3)
length(bbdml_obj)
bbdml_plot_1 + bbdml_plot_2 + bbdml_plot_3 + bbdml_plot_4 + bbdml_plot_5
ggsave("./output/figs/DA_Plot_Genus-Level_Sponge-Species.png",dpi=300,height = 8,width = 14)
# family-level ##
set.seed(123)
da_analysis <- differentialTest(formula = ~ Sponge_Species, #abundance
phi.formula = ~ Sponge_Species, #dispersion
formula_null = ~ 1, #mean
phi.formula_null = ~ 1,
test = "Wald", boot = FALSE,
data = ps_family,
fdr_cutoff = 0.05)
plot(da_analysis)
da_analysis
da_analysis$significant_models
set.seed(123)
da_analysis <- differentialTest(formula = ~ Sponge_Species, #abundance
phi.formula = ~ Sponge_Species, #dispersion
formula_null = ~ 1, #mean
phi.formula_null = ~ 1,
test = "Wald", boot = FALSE,
data = ps_order,
fdr_cutoff = 0.05)
plot(da_analysis)
ggsave("./output/figs/DA_Plot_Genus-Level_Sponge-Species_Overall_Plot.png",width = 14,height = 8,dpi = 300)
length(bbdml_obj)
set.seed(123)
da_analysis <- differentialTest(formula = ~ Sponge_Species, #abundance
phi.formula = ~ Sponge_Species, #dispersion
formula_null = ~ 1, #mean
phi.formula_null = ~ 1,
test = "Wald", boot = FALSE,
data = ps_family,
fdr_cutoff = 0.05)
plot(da_analysis)
if(length(da_analysis$significant_models) > 0){
bbdml_obj <- multi_bbdml(da_analysis,
ps_object = ps_order,
mu_predictor = "Sponge_Species",
phi_predictor = "Sponge_Species",
taxlevels = 2:7)
length(fire_bbdml)
plot_multi_bbdml(bbdml_list = bbdml_obj,
color = "Sponge_Species",
pointsize = 3)
}
set.seed(123)
da_analysis <- differentialTest(formula = ~ Sponge_Species, #abundance
phi.formula = ~ Sponge_Species, #dispersion
formula_null = ~ 1, #mean
phi.formula_null = ~ 1,
test = "Wald", boot = FALSE,
data = ps_genus,
fdr_cutoff = 0.05)
plot(da_analysis)
set.seed(123)
da_analysis <- differentialTest(formula = ~ Sponge_Species, #abundance
phi.formula = ~ Sponge_Species, #dispersion
formula_null = ~ 1, #mean
phi.formula_null = ~ 1,
test = "Wald", boot = FALSE,
data = ps_order,
fdr_cutoff = 0.05)
plot(da_analysis)
ggsave("./output/figs/DA_Plot_Order-Level_Sponge-Species_Overall_Plot.png",width = 14,height = 8,dpi = 300)
if(length(da_analysis$significant_models) > 0){
bbdml_obj <- multi_bbdml(da_analysis,
ps_object = ps_order,
mu_predictor = "Sponge_Species",
phi_predictor = "Sponge_Species",
taxlevels = 2:7)
plot_multi_bbdml(bbdml_list = bbdml_obj,
color = "Sponge_Species",
pointsize = 3)
}
length(bbdml_obj)
bbdml_plot_1 + bbdml_plot_2 + bbdml_plot_3 + bbdml_plot_4 + bbdml_plot_5
ggsave("./output/figs/DA_Plot_Order-Level_Sponge-Species.png",dpi=300,height = 8,width = 14)
# family-level ##
set.seed(123)
da_analysis <- differentialTest(formula = ~ Sponge_Species, #abundance
phi.formula = ~ Sponge_Species, #dispersion
formula_null = ~ 1, #mean
phi.formula_null = ~ 1,
test = "Wald", boot = FALSE,
data = ps_family,
fdr_cutoff = 0.05)
plot(da_analysis)
ggsave("./output/figs/DA_Plot_Family-Level_Sponge-Species_Overall_Plot.png",width = 14,height = 8,dpi = 300)
if(length(da_analysis$significant_models) > 0){
bbdml_obj <- multi_bbdml(da_analysis,
ps_object = ps_order,
mu_predictor = "Sponge_Species",
phi_predictor = "Sponge_Species",
taxlevels = 2:7)
length(fire_bbdml)
plot_multi_bbdml(bbdml_list = bbdml_obj,
color = "Sponge_Species",
pointsize = 3)
}
# genus-level ##
set.seed(123)
da_analysis <- differentialTest(formula = ~ Sponge_Species, #abundance
phi.formula = ~ Sponge_Species, #dispersion
formula_null = ~ 1, #mean
phi.formula_null = ~ 1,
test = "Wald", boot = FALSE,
data = ps_genus,
fdr_cutoff = 0.05)
plot(da_analysis)
ggsave("./output/figs/DA_Plot_Genus-Level_Sponge-Species_Overall_Plot.png",width = 14,height = 8,dpi = 300)
length(da_analysis$significant_models)
if(length(da_analysis$significant_models) > 0){
bbdml_obj <- multi_bbdml(da_analysis,
ps_object = ps_order,
mu_predictor = "Sponge_Species",
phi_predictor = "Sponge_Species",
taxlevels = 2:7)
length(bbdml_obj)
plot_multi_bbdml(bbdml_list = bbdml_obj,
color = "Sponge_Species",
pointsize = 3)
}
if(length(da_analysis$significant_models) > 0){
bbdml_obj <- multi_bbdml(da_analysis,
ps_object = ps_order,
mu_predictor = "Sponge_Species",
phi_predictor = "Sponge_Species",
taxlevels = 2:7)
length(bbdml_obj)
plot_multi_bbdml(bbdml_list = bbdml_obj,
color = "Sponge_Species",
pointsize = 3)
}
bbdml_obj <- multi_bbdml(da_analysis,
ps_object = ps_order,
mu_predictor = "Sponge_Species",
phi_predictor = "Sponge_Species",
taxlevels = 2:7)
# family-level ##
set.seed(123)
da_analysis <- differentialTest(formula = ~ Sponge_Species, #abundance
phi.formula = ~ Sponge_Species, #dispersion
formula_null = ~ 1, #mean
phi.formula_null = ~ 1,
test = "Wald", boot = FALSE,
data = ps_family,
fdr_cutoff = 0.05)
plot(da_analysis)
ggsave("./output/figs/DA_Plot_Family-Level_Sponge-Species_Overall_Plot.png",width = 14,height = 8,dpi = 300)
length(da_analysis$significant_models)
if(length(da_analysis$significant_models) > 0){
bbdml_obj <- multi_bbdml(da_analysis,
ps_object = ps_family,
mu_predictor = "Sponge_Species",
phi_predictor = "Sponge_Species",
taxlevels = 2:7)
length(fire_bbdml)
plot_multi_bbdml(bbdml_list = bbdml_obj,
color = "Sponge_Species",
pointsize = 3)
}
set.seed(123)
da_analysis <- differentialTest(formula = ~ Sponge_Species, #abundance
phi.formula = ~ Sponge_Species, #dispersion
formula_null = ~ 1, #mean
phi.formula_null = ~ 1,
test = "Wald", boot = FALSE,
data = ps_genus,
fdr_cutoff = 0.05)
plot(da_analysis)
plot(da_analysis)
ggsave("./output/figs/DA_Plot_Genus-Level_Sponge-Species_Overall_Plot.png",width = 14,height = 8,dpi = 300)
length(da_analysis)
if(length(da_analysis$significant_models) > 0){
bbdml_obj <- multi_bbdml(da_analysis,
ps_object = ps_genus,
mu_predictor = "Sponge_Species",
phi_predictor = "Sponge_Species",
taxlevels = 2:7)
length(bbdml_obj)
plot_multi_bbdml(bbdml_list = bbdml_obj,
color = "Sponge_Species",
pointsize = 3)
}
(bbdml_plot_1 + bbdml_plot_2 + bbdml_plot_3 + bbdml_plot_4) /  (bbdml_plot_5 + bbdml_plot_6 + bbdml_plot_7 + bbdml_plot_8) /  (bbdml_plot_9 + bbdml_plot_10)
(bbdml_plot_1 + bbdml_plot_2 + bbdml_plot_3 + bbdml_plot_4 + bbdml_plot_5)
ggsave("./output/figs/DA_Plot_Genus-Level_Sponge-Species.png", height = 6, width = 14,dpi = 300)
