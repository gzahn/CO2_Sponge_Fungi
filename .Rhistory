pointsize = 3)
}
bbdml_plot_1
ggsave("./output/figs/DA_Plot_Genus-Level_pH.png",dpi=300)
# PACKAGES, SCRIPTS, AND SETUP ####
library(tidyverse); packageVersion("tidyverse")
library(dada2); packageVersion("dada2")
library(decontam); packageVersion("decontam")
library(phyloseq); packageVersion("phyloseq")
library(purrr); packageVersion("purrr")
seqtab.nochim <- readRDS("./output/dada2_seqtable.RDS")
taxa <- readRDS("./output/RDP_Taxonomy_from_dada2.RDS")
meta <- meta = read_delim("./data/Metadata.csv",delim = ",")
meta <- read_delim("./data/Metadata.csv",delim = ",")
# Hand off to Phyloseq ####
otu <- otu_table(seqtab.nochim,taxa_are_rows = FALSE)
tax <- tax_table(taxa)
met <- sample_data(meta)
row.names(met) <- row.names(meta)
ps <- phyloseq(otu,met,tax)
# re-load point
seqtab.nochim <- readRDS("./output/dada2_seqtable.RDS")
taxa <- readRDS("./output/RDP_Taxonomy_from_dada2.RDS")
meta <- read_delim("./data/Metadata.csv",delim = ",")
row.names(meta) <- as.character(meta$SampleID)
# Hand off to Phyloseq ####
otu <- otu_table(seqtab.nochim,taxa_are_rows = FALSE)
tax <- tax_table(taxa)
met <- sample_data(meta)
row.names(met) <- row.names(meta)
ps <- phyloseq(otu,met,tax)
# Find non-fungi
subset_taxa(ps, Kingdom != "k__Fungi")
# Find non-fungi
ps_nonfungi <- subset_taxa(ps, Kingdom != "k__Fungi")
source("./R/palettes.R")
source("./R/plot_bar2.R")
barplot2(ps_nonfungi)
plot_bar2(ps_nonfungi)
plot_bar2(ps,fill="Kingdom")
ps %>% transform_sample_counts(function(x){x/sum(x)}) %>%
plot_bar2(fill="Kingdom")
ggsave("./output/figs/Kingdom_Level_Taxonomic_Proportions.png",dpi=300)
ps_nonfungi %>%
subset_taxa(Kingdom %in% c("k__Metazoa","k__Alveolata","k__Viridiplantae","k__Stramenopila")) %>%
transform_sample_counts(function(x){x/sum(x)}) %>%
plot_bar2(fill="Kingdom")
ggsave("output/figs/Kingdom_Level_Taxonomic_Proportions_not-including-fungi.png")
ps_nonfungi %>%
subset_taxa(Kingdom %in% c("k__Metazoa","k__Alveolata","k__Viridiplantae","k__Stramenopila")) %>%
transform_sample_counts(function(x){x/sum(x)}) %>%
plot_bar2(fill="Kingdom")
ggsave("output/figs/Kingdom_Level_Taxonomic_Proportions_not-including-fungi.png")
ps %>% subset_taxa(Kingdom != "k__Metazoa") %>%
plot_bar2(fill="Order")
ps %>% subset_taxa(Kingdom == "k__Metazoa") %>%
plot_bar2(fill="Order")
ps %>% subset_taxa(Kingdom == "k__Metazoa") %>%
transform_sample_counts(function(x){x/sum(x)}) %>%
plot_bar2(fill="Family")
ps %>% subset_taxa(Kingdom == "k__Metazoa") %>%
transform_sample_counts(function(x){x/sum(x)}) %>%
plot_bar2(fill="Phylum")
ggsave("output/figs/Phylum_Level_Taxonomic_Proportions_of_Metazoans.png")
# -----------------------------------------------------------------------------#
# Mediterranean sponge fungi - ocean acidification project
# Initial exploratory analyses of processed ITS reads
# Author: Geoffrey Zahn
# Software versions:  R v 3.6.3
#                     tidyverse v 1.3.0
#                     phyloseq v 1.30.0
#                     purrr v 0.3.4
#                     vegan v 2.5.6
#                     treeheatr v 0.1.0
# -----------------------------------------------------------------------------#
# PACKAGES, SCRIPTS, AND SETUP ####
library(phyloseq); packageVersion("phyloseq")
library(tidyverse); packageVersion("tidyverse")
library(vegan); packageVersion("vegan")
library(purrr); packageVersion("purrr")
library(treeheatr); packageVersion("treeheatr")
source("./R/palettes.R")
source("./R/plot_bar2.R")
#Set ggplot theme
theme_set(theme_bw())
# IMPORT DATA ####
ps <- readRDS("./output/clean_phyloseq_object.RDS")
# Investigate UNITE assignments at each taxon level
ps_sp <- ps
phy <- !is.na(tax_table(ps_sp)[,2])
cla <- !is.na(tax_table(ps_sp)[,3])
ord <- !is.na(tax_table(ps_sp)[,4])
fam <- !is.na(tax_table(ps_sp)[,5])
gen <- !is.na(tax_table(ps_sp)[,6])
spp <- !is.na(tax_table(ps_sp)[,7])
assignments_sponge <- data.frame(Phylum=phy, Class=cla,Order=ord,Family=fam,Genus=gen,Species=spp)
assignments_sponge %>% pivot_longer(1:6) %>% mutate(name=factor(name,levels = c("Phylum","Class","Order","Family","Genus","Species"))) %>%
ggplot(aes(x=name,fill=value)) + geom_bar() + scale_fill_manual(values=c("Gray","Black")) +
labs(x="Taxonomic level",y="Count",fill="Unambiguous\nassignment")
ggsave("./output/figs/UNITE_Taxonomic_Assignment_Efficiency_at_Each_Taxonomic_Rank.png",dpi=300)
rm(phy,cla,ord,fam,gen,spp,assignments_sponge,ps_sp)
# remove "NA" Phylum taxa
ps <- subset_taxa(ps,!is.na(tax_table(ps)[,2]))
# Look at available metadata
glimpse(sample_data(ps))
# Clean up taxonomy names
for(i in 1:7){
tax_table(ps)[,i] <- str_remove(tax_table(ps)[,i],".__")
}
# relative abundance
ps_ra <- ps %>% transform_sample_counts(function(x){x/sum(x)})
# Quick glance at alpha diversity ####
plot_richness(ps,x="Acidified",measures = "Shannon") +
facet_grid(~Sponge_Species) + labs(y="Shannon diversity")
ggsave("./output/figs/Shannon_diversity_dotplot_by_Species_and_Acidification.png",dpi=300)
# Calculate alpha diversity measures and add to metadata
ps@sam_data$Shannon <- estimate_richness(ps, measures="Shannon")$Shannon
ps@sam_data$Richness <- specnumber(otu_table(ps))
# save as dataframe object for easy modeling
meta <- as(sample_data(ps),"data.frame")
glimpse(meta)
# Export crosstab of acidification vs species
sink("./output/Sample_N_for_groups_Acidification_and_SpongeSpecies.txt")
table(ps@sam_data$Acidified,ps@sam_data$Sponge_Species)
sink(NULL)
# Merge samples for plotting ####
# merge based on sponge species and acidification
newvar <- paste(ps@sam_data$Sponge_Species,ps@sam_data$Acidified,sep="_")
ps@sam_data$newvar <- newvar
ps_merged <- merge_samples(ps,newvar)
# repair metadata
ps_merged@sam_data$Sponge_Species <- unlist(map(str_split(sample_names(ps_merged),"_"),1))
ps_merged@sam_data$Acidified <- unlist(map(str_split(sample_names(ps_merged),"_"),2))
# Quick heatmaps ####
# phylum
p <- ps_merged %>% tax_glom("Phylum") %>%
transform_sample_counts(function(x){x/sum(x)}) %>%
plot_heatmap(taxa.label = "Phylum",sample.label = "Sponge_Species") +
facet_grid(~Acidified,scales="free") + theme(strip.background = element_blank(), strip.text = element_text(face="bold")) + labs(x="Sponge species")
p$scales$scales[[3]]$name <- "Relative\nabundance"
p
ggsave("./output/figs/Heatmap_Phylum_RelAbund_by_Sponge_Species.png",dpi=300)
# class
p <- ps_merged %>% tax_glom("Class") %>%
transform_sample_counts(function(x){x/sum(x)}) %>%
plot_heatmap(taxa.label = "Class",sample.label = "Sponge_Species") +
facet_grid(~Acidified,scales="free") + theme(strip.background = element_blank(), strip.text = element_text(face="bold")) + labs(x="Sponge species")
p$scales$scales[[3]]$name <- "Relative\nabundance"
p
ggsave("./output/figs/Heatmap_Class_RelAbund_by_Sponge_Species.png",dpi=300)
# order
p <- ps_merged %>% tax_glom("Order") %>%
transform_sample_counts(function(x){x/sum(x)}) %>%
plot_heatmap(taxa.label = "Order",sample.label = "Sponge_Species") +
facet_grid(~Acidified,scales="free") + theme(strip.background = element_blank(), strip.text = element_text(face="bold")) + labs(x="Sponge species")
p$scales$scales[[3]]$name <- "Relative\nabundance"
p
ggsave("./output/figs/Heatmap_Order_RelAbund_by_Sponge_Species.png",dpi=300)
# alternate view
p <- ps_merged %>% tax_glom("Phylum") %>%
transform_sample_counts(function(x){x/sum(x)}) %>%
plot_heatmap(taxa.label = "Phylum",sample.label = "Acidified") +
facet_grid(~Sponge_Species,scales="free") + theme(strip.background = element_blank(), strip.text = element_text(face="bold")) + labs(x="Sponge species")
p$scales$scales[[3]]$name <- "Relative\nabundance"
p
ggsave("./output/figs/Heatmap_Phylum_Alternate_Layout.png",dpi=300)
# Diversity BarPlots ####
# stacked boxplots x-axis=Acidification, y-axis relative-abundance
# Phylum
ps_merged %>%
transform_sample_counts(function(x){x/sum(x)}) %>%
plot_bar2(fill="Phylum",x="Acidified") + scale_fill_manual(values = pal.discrete) +
labs(y="Relative abundance",x="Acidification") +
theme(axis.text.x = element_text(angle = 60,hjust=1),
axis.title = element_text(face="bold",size=16),
axis.text = element_text(face="bold",size=12),
strip.background = element_blank(),
strip.text = element_text(size=12,face="bold.italic")) +
facet_wrap(~Sponge_Species,scales = "free")
ggsave("./output/figs/Phylum_Diversity_BarChart_by_Acidification.png",dpi=300)
# Class
ps_merged %>%
transform_sample_counts(function(x){x/sum(x)}) %>%
plot_bar2(fill="Class",x="Acidified") + scale_fill_manual(values = pal.discrete) +
labs(y="Relative abundance",x="Acidification") +
theme(axis.text.x = element_text(angle = 60,hjust=1),
axis.title = element_text(face="bold",size=16),
axis.text = element_text(face="bold",size=12),
strip.background = element_blank(),
strip.text = element_text(size=12,face="bold.italic")) +
facet_wrap(~Sponge_Species,scales = "free")
ggsave("./output/figs/Class_Diversity_BarChart_by_Acidification.png",dpi=300,width = 10, height = 8)
# merge based on site only
ps_merged <- merge_samples(ps,"Sampling_Site")
# Phylum
ps_merged %>%
transform_sample_counts(function(x){x/sum(x)}) %>%
plot_bar2(fill="Phylum") + scale_fill_manual(values = pal.discrete) +
labs(y="Relative abundance",x="Site") +
theme(axis.text.x = element_text(angle = 60,hjust=1),
axis.title = element_text(face="bold",size=16),
axis.text = element_text(face="bold",size=12),
strip.background = element_blank(),
strip.text = element_text(size=12,face="bold.italic"))
ggsave("./output/figs/Phylum_Diversity_BarChart_by_Site.png",dpi=300)
# Class
ps_merged %>%
transform_sample_counts(function(x){x/sum(x)}) %>%
plot_bar2(fill="Class") + scale_fill_manual(values = pal.discrete) +
labs(y="Relative abundance",x="Site") +
theme(axis.text.x = element_text(angle = 60,hjust=1),
axis.title = element_text(face="bold",size=16),
axis.text = element_text(face="bold",size=12),
strip.background = element_blank(),
strip.text = element_text(size=12,face="bold.italic"))
ggsave("./output/figs/Class_Diversity_BarChart_by_Site.png",dpi=300)
# Model alpha diversity ####
# as a function of acidification, species, bleaching status
# Consider, first, the data without Seawater samples...not sure how to treat those...
meta2 <- meta[meta$Sponge_Species != "Seawater",]
mod1 <- glm(data = meta2,
Richness ~ pH + Sponge_Species)
summary(mod1)
mod2 <- glm(data = meta2,
Shannon ~ pH + Sponge_Species)
summary(mod2)
mod
# ... Does not seem to be an effect for alpha diversity based on sponge species or acidification
table(meta2$Spnge_Species,meta2$Site)
table(meta2$Spnge_Species,meta2$Sampling_Site)
table(meta2$Sponge_Species,meta2$Sampling_Site)
# glm of diversity by site
mod3 <- glm(data = meta2,
Richness ~ Sampling_Site)
summary(mod3)
mod3b <- aov(data = meta2,
Richness ~ Sampling_Site)
TukeyHSD(mod3b)
plot(TukeyHSD(mod3b))
summary(mod3b)
mod3b <- aov(data = meta2,
Shannon ~ Sampling_Site)
summary(mod3b)
plot(TukeyHSD(mod3b))
mod3b <- aov(data = meta2,
Richness ~ Sampling_Site)
summary(mod3b)
plot(TukeyHSD(mod3b))
TukeyHSD(mod3b)
summary(mod3)
# glm of diversity by site
mod3 <- glm(data = meta2,
Shannon ~ Sampling_Site)
summary(mod3)
# relative abundance transformation
ps_ra <- ps %>% transform_sample_counts(function(x){x/sum(x)})
# Ordinations ####
ord <- ordinate(ps_ra,method = "NMDS")
stressplot(ord)
plot_ordination(ps_ra,ord,color="Sample_Site")
plot_ordination(ps_ra,ord,color="Sampling_Site")
# Ordinations ####
ord <- ordinate(ps_ra,method = "GDM")
stressplot(ord)
plot_ordination(ps_ra,ord,color="Sampling_Site")
?ordinate
# Ordinations ####
ord <- ordinate(ps_ra,method = "DCA")
stressplot(ord)
plot_ordination(ps_ra,ord,color="Sampling_Site")
# Ordinations ####
ord <- ordinate(ps_ra,method = "DCA",distance = "jaccard")
plot_ordination(ps_ra,ord,color="Sampling_Site")
# Ordinations ####
ord <- ordinate(ps_ra,method = "NMDS",distance = "jaccard")
plot_ordination(ps_ra,ord,color="Sampling_Site")
# Ordinations ####
ord <- ordinate(ps_ra,method = "PCoA",distance = "jaccard")
plot_ordination(ps_ra,ord,color="Sampling_Site")
# Ordinations ####
ord <- ordinate(ps_ra,method = "DCA",distance = "jaccard")
plot_ordination(ps_ra,ord,color="Sampling_Site")
plot_ordination(ps_ra,ord,color="Sampling_Site") + stat_ellipse()
plot_ordination(ps_ra,ord,color="Sponge_Species") + stat_ellipse()
plot_ordination(ps_ra,ord,color="Acidified") + stat_ellipse()
plot_ordination(ps_ra,ord,color="Sponge_Species") + stat_ellipse()
# relative abundance transformation
ps_ra <- ps %>% transform_sample_counts(function(x){x/sum(x)}) %>% subset_samples(Spnge_Species != "Seawater")
# relative abundance transformation
ps_ra <- ps %>% transform_sample_counts(function(x){x/sum(x)}) %>% subset_samples(Sponge_Species != "Seawater")
# MANTEL TEST AND MULTIPLE REGRESSION ON MATRICES ####
spatial.dist = vegdist(as.matrix(cbind(ps_ra@sam_data$Latitude, ps_ra@sam_data$Longitude)),method = "bray")
comm.dist = vegdist(as.matrix(ps_ra@otu_table),method = "bray")
man <- vegan::mantel(spatial.dist,comm.dist)
man
sink("./output/mantel_test_summary.txt")
print("Spatial vs community distance...")
man
sink(NULL)
# Ordinations ####
ord <- ordinate(ps_ra,method = "DCA",distance = "jaccard")
plot_ordination(ps_ra,ord,color="Sampling_Site") + stat_ellipse()
plot_ordination(ps_ra,ord,color="Sponge_Species") + stat_ellipse()
plot_ordination(ps_ra,ord,color="Acidified") + stat_ellipse()
plot_ordination(ps_ra,ord,color="Sponge_Species") + stat_ellipse()
permanova <- vegan::adonis(otu_table(ps_ra) ~ ps_ra@sam_data$Sampling_Site)
summary(permanova)
permanova
permanova <- vegan::adonis(otu_table(ps_ra) ~ ps_ra@sam_data$Sampling_Site + ps_ra@sam_data$Sponge_Species)
permanova
permanova <- vegan::adonis(otu_table(ps_ra) ~ ps_ra@sam_data$Sampling_Site * ps_ra@sam_data$Sponge_Species)
permanova
# PERMANOVA ####
permanova <- vegan::adonis(otu_table(ps_ra) ~ ps_ra@sam_data$Sampling_Site * ps_ra@sam_data$Sponge_Species)
sink("./output/permanova_comm-distance_vs_Site_and_Sponge-Species.txt")
permanova
sink(NULL)
permanova
# PERMANOVA ####
permanova <- vegan::adonis(otu_table(ps_ra) ~ ps_ra@sam_data$Sampling_Site * ps_ra@sam_data$Sponge_Species)
permanova
# PERMANOVA ####
permanova <- vegan::adonis(otu_table(ps_ra) ~ ps_ra@sam_data$Sampling_Site * ps_ra@sam_data$Sponge_Species)
permanova
# PERMANOVA ####
permanova <- vegan::adonis(otu_table(ps_ra) ~ ps_ra@sam_data$Sampling_Site * ps_ra@sam_data$Sponge_Species)
permanova
sink("./output/permanova_comm-distance_vs_Site_and_Sponge-Species.txt")
permanova
sink(NULL)
# PERMANOVA ####
set.seed(123)
permanova <- vegan::adonis(otu_table(ps_ra) ~ ps_ra@sam_data$Sampling_Site * ps_ra@sam_data$Sponge_Species)
permanova
sink("./output/permanova_comm-distance_vs_Site_and_Sponge-Species.txt")
permanova
sink(NULL)
# Ordinations ####
set.seed(123)
ord <- ordinate(ps_ra,method = "DCA",distance = "jaccard")
plot_ordination(ps_ra,ord,color="Sampling_Site") + stat_ellipse()
plot_ordination(ps_ra,ord,color="Sponge_Species") + stat_ellipse()
plot_ordination(ps_ra,ord,color="Acidified") + stat_ellipse()
# PERMANOVA ####
set.seed(123)
permanova <- vegan::adonis(otu_table(ps_ra) ~ ps_ra@sam_data$Sampling_Site * ps_ra@sam_data$Sponge_Species)
sink("./output/permanova_comm-distance_vs_Site_and_Sponge-Species.txt")
permanova
sink(NULL)
permanova
meta2 %>% mutate(Cave = case_when(Sampling_Site == "GM" ~ "Cave"))
meta2 %>% mutate(LightStatus = case_when(Sampling_Site == "GM" ~ "Cave",
Sampling_Site != "GM" ~ "Open"))
meta2 <- meta2 %>% mutate(LightStatus = case_when(Sampling_Site == "GM" ~ "Cave",
Sampling_Site != "GM" ~ "Open"))
mod4 <- aov(data = meta2,
Richness ~ LightStatus)
summary(mod4)
TukeyHSD(mod4)
mod4 <- aov(data = meta2,
Shannon ~ LightStatus)
summary(mod4)
TukeyHSD(mod4)
mod4 <- glm(data = meta2,
Shannon ~ LightStatus)
summary(mod4)
mod4 <- aov(data = meta2,
Shannon ~ LightStatus)
summary(mod4)
mod5 <- glm(data = meta2,
Shannon ~ LightStatus)
summary(mod5)
mod4 <- glm(data = meta2,
Shannon ~ LightStatus)
summary(mod4)
# look at nestedness of species within sampling site
table(meta2$Sponge_Species,meta2$Sampling_Site)
# glm of diversity by site
mod3 <- glm(data = meta2,
Shannon ~ Sampling_Site * Sponge_Species)
summary(mod3)
mod3b <- aov(data = meta2,
Richness ~ Sampling_Site * Sponge_Species)
summary(mod3b)
TukeyHSD(mod3b)
TukeyHSD(mod3b[[2]])
TukeyHSD(mod3b)$Sampling_Site
plot(TukeyHSD(mod3b)$Sampling_Site)
TukeyHSD(mod3b)$Sampling_Site
mod3b <- glm(data = meta2,
Richness ~ Sampling_Site * Sponge_Species)
summary(mod3b)
# glm of diversity by site
mod3 <- aov(data = meta2,
Shannon ~ Sampling_Site * Sponge_Species)
summary(mod3)
mod3b <- aov(data = meta2,
Richness ~ Sampling_Site * Sponge_Species)
summary(mod3b)
TukeyHSD(mod3b)$Sampling_Site
mod3b <- aov(data = meta2,
Richness ~ LigthStatus * Sponge_Species)
mod3b <- aov(data = meta2,
Richness ~ LightStatus * Sponge_Species)
summary(mod3b)
mod3b <- aov(data = meta2,
Richness ~ Sampling_Site * Sponge_Species)
summary(mod3b)
TukeyHSD(mod3b)
plot(TukeyHSD(mod3b))
mod3b
# look at nestedness of species within sampling site
table(meta2$Sponge_Species,meta2$Sampling_Site)
sink("./output/ANOVA_models_for_alpha-diversity.txt")
mod3
summary(mod3)
mod3b
summary(mod3b)
sink(NULL)
# look at cave vs non-cave sites
meta2 <- meta2 %>% mutate(LightStatus = case_when(Sampling_Site == "GM" ~ "Cave",
Sampling_Site != "GM" ~ "Open"))
mod4 <- glm(data = meta2,
Shannon ~ LightStatus * Sponge_Species)
summary(mod4)
mod5 <- glm(data = meta2,
Shannon ~ LightStatus * Sponge_Species)
summary(mod5)
# look at nestedness of species within sampling site
table(meta2$Sponge_Species,meta2$Sampling_Site)
ch <- "k__Archaea|p__Euryarchaota|c__whatever"
str_split(ch,pattern="|")
ch <- c("k__Archaea|p__Euryarchaota|c__whatever","k__Archaea|p__Euryarchaota|c__whatever2")
str_split(ch,pattern="|")
str_split(ch,pattern="\\|")
str_split(ch,pattern="\\|") %>% str_split(pattern = "__")
str_split(ch,pattern="\\|") %>% str_split(pattern = "\\_\\_")
str_split(ch,pattern="\\|") %>% str_split(pattern = "\_\_")
str_split(ch,pattern="\\|") %>% str_split(pattern = "\\_\_")
str_split(ch,pattern="\\|") %>% str_split(pattern = "\\_")
str_split(ch,pattern="\\|")
purrr::map_chr(str_split(ch,pattern="\\|") ,1)
kingdom <- purrr::map_chr(str_split(ch,pattern="\\|") ,1)
phylum <- purrr::map_chr(str_split(ch,pattern="\\|") ,2)
class <- purrr::map_chr(str_split(ch,pattern="\\|") ,3)
kingdom %>% str_split(pattern = "\\_")
kingdom %>% str_remove(pattern = "\\_")
kingdom <- kingdom %>% str_remove(pattern = "\\_")
# -----------------------------------------------------------------------------#
# Mediterranean sponge fungi - ocean acidification project
# Beta-Diversity measures nd Ordinations
# Author: Geoffrey Zahn
# Software versions:  R v 3.6.3
#                     tidyverse v 1.3.0
#                     patchwork v 1.0.1
#                     phyloseq v 1.30.0
#                     corncob v 0.1.0
#                     broom v 0.7.0
#                     purrr v 0.3.4
#                     vegan v 2.5.6
#                     ade4 v 1.7.15
# -----------------------------------------------------------------------------#
# packages ####
library(tidyverse); packageVersion("tidyverse")
library(patchwork); packageVersion("patchwork")
library(phyloseq); packageVersion("phyloseq")
library(corncob); packageVersion("corncob")
library(vegan); packageVersion("vegan")
library(broom); packageVersion("broom")
library(purrr); packageVersion("purrr")
library(ade4); packageVersion("ade4")
library(vegan); packageVersion("vegan")
#functions
source("./R/bbdml_helper.R")
source("./R/palettes.R")
# IMPORT DATA ####
ps <- readRDS("./output/clean_phyloseq_object.RDS")
# remove "NA" Phylum taxa
ps <- subset_taxa(ps,!is.na(tax_table(ps)[,2]))
# relative abundance transformation
ps_ra <- ps %>% transform_sample_counts(function(x){x/sum(x)}) %>% subset_samples(Sponge_Species != "Seawater")
# MANTEL TEST AND MULTIPLE REGRESSION ON MATRICES ####
spatial.dist = vegdist(as.matrix(cbind(ps_ra@sam_data$Latitude, ps_ra@sam_data$Longitude)),method = "bray")
comm.dist = vegdist(as.matrix(ps_ra@otu_table),method = "bray")
man <- vegan::mantel(spatial.dist,comm.dist)
man
sink("./output/mantel_test_summary.txt")
print("Spatial vs community distance...")
man
sink(NULL)
# No apparent signifigance to spatial correlation and community distance
# Ordinations ####
set.seed(123)
ord <- ordinate(ps_ra,method = "DCA",distance = "jaccard")
plot_ordination(ps_ra,ord,color="Sampling_Site") + stat_ellipse()
plot_ordination(ps_ra,ord,color="Sponge_Species") + stat_ellipse()
plot_ordination(ps_ra,ord,color="Acidified") + stat_ellipse()
# PERMANOVA ####
set.seed(123)
permanova <- vegan::adonis(otu_table(ps_ra) ~ ps_ra@sam_data$Sampling_Site * ps_ra@sam_data$Sponge_Species)
sink("./output/permanova_comm-distance_vs_Site_and_Sponge-Species.txt")
permanova
sink(NULL)
plot_ordination(ps_ra,ord,color="Sampling_Site") + stat_ellipse() + scale_color_manual(values=pal.discrete)
BiocManager::install("microbiome")
# BiocManager::install("microbiome")
library(microbiome); packageVersion("microbiome")
requireNamespace("broom")
!requireNamespace("broom")
library(broom); packageVersion("broom")
!requireNamespace("broom")
?requireNamespace
